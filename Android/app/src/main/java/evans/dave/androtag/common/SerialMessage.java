/*
--------------------------------------------------------------------
XXXX           PYTEMPLATE AUTOMATICALLY GENERATED FILE          XXXX

        version 0.01                                                
        Generated 2015-02-21 18:13:49.482000
        
XXXX    DO NOT EDIT THIS FILE                                   XXXX
--------------------------------------------------------------------
*/package evans.dave.androtag.common;

/**
 * Created by Dave on 09/02/2015.
 */
public enum SerialMessage {
	
	
/* AUTO CODE BEGIN */

    SET_STATE (0),//state 1 is playing, 0 is disabled, may add more
    SET_LIVES (10),//changes current lives
    SET_SHIELD (11),//sets current shield
    SET_RESPAWN (12),//sets respawn time (displacement from current time in ms)
    SET_PID (20),//sets this players id [0,254]
    SET_TID (21),//sets this players team id [0,15]
    SET_GID (22),//sets this players game id [0,254]
    SET_COLOR (23),//sets this players color
    ADD_ENEMY (28),//adds an enemy team for this player (can be hit by them)
    CLEAR_ENEMIES (29),//clears all enemy teams
    SET_NUM_GUNS (30),//sets the loadout size
    SET_GUN_0 (31),//sets loadout position 0
    SET_GUN_1 (32),//sets loadout position 1
    SET_GUN_2 (33),//sets loadout position 2
    SET_GUN_3 (34),//sets loadout position 3
    TRY_FIRE (40),//Sent when the player pulls the trigger
    FIRE_SUCCESS (41),//Sent telling android whether the gun fired or not
    TRY_RELOAD (42),//Sent when the player pulls the reload trigger
    RELOAD_SUCCESS (43),//Sent telling android whether the gun finished reloading
    SET_AMMO (44),//Sets the current ammo of the current gun
    SET_ACTIVE (45),//Sets the current gun [0,3]
    NO_LIVES (46),//Sent when the player runs out of lives
    HIT_BY (48),//Specifies who hit us and with what
    KILLED_BY (49),//Specifies who killed us and with what
    SET_START_TIME (50),//Sets the game start time as a displacement (ms) from the current time
    SET_END_TIME (51),//Sets the game end time as a displacement (ms) from the current time
    END_GAME (59),//Immediately stops the current game
    ACK (254),//simple acknowledgement
    FLUSH (255);//sending this at any point will refresh the serial buffer
	
/* AUTO CODE END */


    private final byte id;

    SerialMessage(int id){
        this.id = (byte) id;
    }

    public boolean equals(byte i){ return id==i; }

    public byte getId(){ return id;}

    public static SerialMessage getFromByte(byte i){
        for (SerialMessage msg : SerialMessage.values())
            if (msg.equals(i))
                return msg; // return it
        return null; // Not a message
    }




    }
